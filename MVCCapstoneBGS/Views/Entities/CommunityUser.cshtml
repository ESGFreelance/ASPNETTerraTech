
@{
    Layout = @ViewBag.VBLayout; ;
}

<!DOCTYPE html>

<html>
<head>
    <script src="https://cdn.jsdelivr.net/gh/YuanxiangFranck/Leaflet.heat/dist/leaflet-heat.js"></script>
    <script src="https://cdn.jsdelivr.net/gh/YuanxiangFranck/Leaflet.heat/src/HeatLayer.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/leaflet-easybutton@2/src/easy-button.css">
    <script src="https://cdn.jsdelivr.net/npm/leaflet-easybutton@2/src/easy-button.js"></script>

    <meta name="viewport" content="width=device-width" />
    <title>@LabelStruct.CommunityUser.CommunityUserHomepage</title>
    <style>
    </style>


</head>
<body>

    @*@Html.Raw(ViewBag.DUMMY2)*@

    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="">Community User</a></li>
        <li class="breadcrumb-item active">Homepage</li>
    </ol>

    <div class="card mb-4">
        <div class="card-body">
            @LabelStruct.CommunityUser_Message.M_CommunityUserHomepage
        </div>
    </div>


    <div class="row">
        <div class="col-xl-3 col-md-6">
            <div class="card bg-primary text-white mb-4">
                <div class="card-body">Solved Water Cases: </div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link">@ViewBag.WaterScore</a>

                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-warning text-white mb-4">
                <div class="card-body">Solved Land Cases:</div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link"> @ViewBag.LandScore</a>

                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-success text-white mb-4">
                <div class="card-body">Overall Score:</div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link"> @ViewBag.OverallScore</a>

                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-danger text-white mb-4">
                <div class="card-body">Areas Reported:  </div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link">@ViewBag.AreaScore</a>

                </div>
            </div>
        </div>
    </div>


    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-chart-area mr-1"></i>
            My Reported Cases
        </div>


        <div class="card-body">

            <select name="UpdatedStatusDDL" class="btn btn-dark UpdatedStatusDDL">- Please Select -</select>

            <div class="control-label col-xs-12 col-sm-4">
                <label class="asteriskRequired"></label>
            </div>

            <div style="padding-top:25px; height:500px" id='map'></div>
        </div>

        <div class="card-footer small text-muted">Data as of @ViewBag.DATETIMENOW</div>
    </div>

    @*@Html.Raw(ViewBag.DUMMY2)*@
</body>
</html>


<script>

    var addressPoints = [];
    var resultingdata;

    $(document).ready(function () {
        LoadUpdatedStatusDDL();
        LoadMap();
    });

   

    function LoadUpdatedStatusDDL() {
        var temp = $(".UpdatedStatusDDL").empty();
        temp.append($("<option>Select Status</option>"));
        $.ajax({
            type: "GET",
            url: "/DataGet/GetUpdatedStatus",
            dataType: "json",
            success: function (response) {
                $.each(response, function () {

                    temp.append($("<option></option>").val(this['UpdatedStatusID']).html(this['Description']));
                });
            }
        })
    };

    $(document).on("change", ".UpdatedStatusDDL", function () {
        addressPoints = [];
        ReLoadMap();
        var PARAM_UPDATEDSTATUSID = $('.UpdatedStatusDDL').val();

        $.ajax({
            type: "GET",
            "url": "/DataGet/GetMapCommunityUser",
            dataType: "json",
            async: false,
            data: {
                UpdatedStatusID: PARAM_UPDATEDSTATUSID,
                UserInformationID: @Session["UserInformationID"]
            },
            success: function (result) {

                //$.each(result, function (index, value) {
                var jsonStringify = JSON.stringify(result);
                var jsonObj = JSON.parse(jsonStringify);
                //console.table(jsonObj);
                // console.log(jsonObj);
                resultingdata = jsonObj;
                //alert(jsonObj[0]['XCoordinates'] + ' ' + jsonObj[0]['YCoordinates']);
                //});
            }
        }
        );
        //    console.log(resultingdata);
        Object.keys(resultingdata).forEach(
            (key) => addressPoints.push([
                "<center><img src='" + resultingdata[key]['PhotoLink'] + "' style='width:250px; height:150px;' id='imageID'></center><br /><b>Case Report No: </b>" + resultingdata[key]['CaseReportID'] + "<br /><b>Reported on: </b>" + new Date(parseInt((resultingdata[key]['DateReported']).substr(6))) + "<br /><b>Updated on: </b>" + new Date(parseInt((resultingdata[key]['UpdatedStatusDate']).substr(6))) + "<br /><b>Concern: </b>" + resultingdata[key]['Concern'] + " - " + resultingdata[key]['SubCategory'] + "<br /><b>Location: </b>" + resultingdata[key]['CaseLocation']
                , resultingdata[key]['XCoordinates']
                , resultingdata[key]['YCoordinates']])
        );
        //     console.log(addressPoints);
    });

    $(document).on("click", "#imageID", function () {
        Swal.fire({
            title: 'Environmental Concern',
            text: 'Powered by TerraTech',
            imageUrl: $(this)[0].getAttribute('src'),
            imageWidth: 400,
            imageHeight: 200,
            imageAlt: 'Custom image',
        })

    });


    function LoadAddressPoints() {
        addressPoints = addressPoints;
    }

    function LoadMap() {
        map = L.map('map');
        var tiles = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
            attribution: 'a',
        }).addTo(map);
        map.setView([14.564946, 121.041729], 7);
        var maxBounds = [
            [21.116625, 131.175528],
            [4.991861, 115.976455]
        ];
        map.setMaxBounds(maxBounds);
        map.fitBounds(maxBounds);
        $('.leaflet-control-attribution').hide();

        L.easyButton('fas fa-fire-alt', function () {
            LoadHeatMap();
        }).addTo(map);

        L.easyButton('fas fa-map-marker-alt', function () {
            LoadMarkerMap();
        }).addTo(map);

    }

    function LoadMarkerMap() {
        ReLoadMap();
        LoadAddressPoints();

        //  console.log(addressPoints);
        for (var i = 0; i < addressPoints.length; i++) {
            marker = new L.marker([addressPoints[i][1], addressPoints[i][2]])
                .bindPopup(addressPoints[i][0])
                .addTo(map);
        }
        map.setView([addressPoints[1][1], addressPoints[1][2]], 25);

    };

    function LoadHeatMap() {
        ReLoadMap();
        LoadAddressPoints();
        //     console.log(addressPoints);

        var x = addressPoints.map(function (p) {
            return [p[1], p[2]];
        });
        map.setView([addressPoints[1][1], addressPoints[1][2]], 25);


        var heat = L.heatLayer(x).addTo(map);
    }

    function ReLoadMap() {
        if (map != null) {
            map.remove();
            map = null;
        }
        LoadMap();
    }


</script>



@*

        //var LeafIcon = L.Icon.extend({
        //    options: {
        //        iconSize: [38, 95],
        //        shadowSize: [50, 64],
        //        iconAnchor: [22, 94],
        //        shadowAnchor: [4, 62],
        //        popupAnchor: [-3, -76]
        //    }
        //});
        //var greenIcon = new LeafIcon({
        //    iconUrl: 'http://leafletjs.com/examples/custom-icons/leaf-green.png',
        //    shadowUrl: 'http://leafletjs.com/examples/custom-icons/leaf-shadow.png'
        //})

            // L.marker([51.5, -0.09], { icon: greenIcon }).addTo(map);
        //L.Icon.Default.prototype.options.iconUrl =
        //L.Icon.Default.prototype.options.shadowUrl = "http://leafletjs.com/examples/custom-icons/leaf-shadow.png";

        //L.Icon.Default.prototype.options = {
        //    iconUrl: 'C:\Users\pc\Desktop\Green.png',
        //    iconSize: [20, 70],
        //    iconAnchor: [10, 70],

        //}

    **@