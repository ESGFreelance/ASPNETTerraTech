
@{
    Layout = @ViewBag.VBLayout;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@LabelStruct.Administrator.Rejected</title>
    <style type="text/css">
        .mobileHide {
            display: inline;
        }
        /* Smartphone Portrait and Landscape */
        @@media only screen and (min-device-width : 320px) and (max-device-width : 480px) {
            .mobileHide {
                display: none;
            }
        }
    </style>
</head>
<body>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="">Administrator</a></li>
        <li class="breadcrumb-item"><a href="">Management</a></li>
        <li class="breadcrumb-item"><a href="">Concerns</a></li>
        <li class="breadcrumb-item active">Rejected</li>
    </ol>

    <div class="card mb-4">
        <div class="card-body">
            @LabelStruct.Administrator_Message.M_Rejected

        </div>
    </div>

    <div class="row">
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-body">
                    Select Starting and Ending Date to  @LabelStruct.Administrator_Message.M_Submitted provided by the contribution of the Community Users
                </div>
                <label for="example-date-input" class="col-md-6 col-form-label">Start Date</label>
                <div class="col-10">
                    <input type="date" id="myMinDate" value="@ViewBag.StartDatePCK" class="form-control validate" max="">
                </div>
                <label for="example-date-input" class="col-md-6 col-form-label">End Date</label>
                <div class="col-10">
                    <input type="date" id="myMaxDate" value="@ViewBag.EndDatePCK" class="form-control validate" max="">
                </div>
                <div class="col-xs-12 col-sm-8">
                    <input style="margin-top:10px; margin-bottom:65px;" type="submit" id="btnGenerate" value="Generate" class="btn btn-primary btn-md btnGenerate" />
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-pie mr-1"></i>
                    Land and Water Concerns
                </div>
                <div class="card-body"><canvas id="myPieChart" width="100" height="50"></canvas></div>
            </div>
        </div>
    </div>




    <div class="row mobileHide">
        <div class="col-lg-12">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-bar mr-1"></i>
                    Monthly Status
                </div>
                <div class="card-body"><canvas id="myBarChart" width="100" height="50"></canvas></div>
            </div>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-chart-area mr-1"></i>
            Recent Concerns
        </div>

        <div class="card-body">
            <table id="RejectedTable" class="table table-hover table-striped table-bordered table-responsive-sm" cellspacing="0" style="width:100%; "></table>
        </div>

        <div class="card-footer small text-muted">Data as of @ViewBag.DATETIMENOW</div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-chart-area mr-1"></i>
            Deactivate Users / Top Users with Rejected Concerns
        </div>

        <div class="card-body">
            <table id="BanTable" class="table table-hover table-striped table-bordered table-responsive-sm" cellspacing="0" style="width:100%; "></table>
        </div>

        <div class="card-footer small text-muted">Data as of @ViewBag.DATETIMENOW</div>
    </div>

    @*MODAL SECTION UPDATE START*@
    <div class="modal fade" id="myModalUpdate" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content" id="modalwindow">
                <div class="modal-header">
                    <h3 class="modal-title Title">Update Status: Rejected</h3>
                </div>
                <div class="modal-body">
                    <div class="row">

                        <div class="col-md-7">
                            <div class="row-1" style=" margin-bottom:10px; height:250px;">
                                <img src="" id="imageID" style="width:100%; height:240px" />

                            </div>

                            <div id="mapid" class="row-1" style="border:double; margin-bottom:10px; height: 250px;">
                            </div>
                        </div>

                        <div class="col-md-5">
                            <div class="md-form mb-3">
                                <input type="text" id="tbCaseReportNo" class="form-control validate" disabled>
                                <label data-error="wrong" data-success="right" for="orangeForm-name">Case Report No.</label>
                            </div>
                            <div class="md-form mb-3">
                                <input type="text" id="tbCaseLocation" class="form-control validate" disabled>
                                <label data-error="wrong" data-success="right" for="orangeForm-name">Case Location</label>
                            </div>
                            <div class="md-form mb-3">
                                <input type="text" id="tbConcern" class="form-control validate" disabled>
                                <label data-error="wrong" data-success="right" for="orangeForm-text">Concern</label>
                            </div>
                            <div class="md-form mb-3">
                                <input type="text" id="tbDateReported" class="form-control validate" disabled>
                                <label data-error="wrong" data-success="right" for="orangeForm-text">Date Reported</label>
                            </div>

                            <div class="md-form mb-3">
                                <input type="email" id="tbReporter" class="form-control validate" disabled>
                                <label data-error="wrong" data-success="right" for="orangeForm-name">Reported by</label>
                            </div>

                            <div class="md-form mb-3">
                                <textarea class="form-control tbNotes" id="tbNotes" rows="3"></textarea>
                                <label data-error="wrong" data-success="right" for="orangeForm-name">Reported by</label>
                            </div>
                        </div>

                    </div>

                </div>

                <div class="modal-footer">
                    <p>Powered by TerraTechPH</p>
                    <button type="button" id="btnRestart" class="btn btn-success btnRestart" data-dismiss="modal">Restart</button>
                    <button type="button" id="btnReject" class="btn btn-warning btnReject" data-dismiss="modal">Finalize</button>
                    <button type="button" class="btn btn-danger" data-dismiss="modal" title="Close">Close</button>
                </div>
            </div>
            <!-- Modal content-->
        </div>
    </div>

</body>
</html>



<script>

    var map = L.map('mapid');
    var marker;
    var maxBounds = [
        [21.116625, 131.175528],
        [4.991861, 115.976455]
    ];
    map.setMaxBounds(maxBounds);
    var a = 'https://api.tiles.mapbox.com/v4/mapbox.streets/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoiYmJyb29rMTU0IiwiYSI6ImNpcXN3dnJrdDAwMGNmd250bjhvZXpnbWsifQ.Nf9Zkfchos577IanoKMoYQ';
    var b = 'https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw';
    L.tileLayer(b).addTo(map);

    var CaseReportID;

    $(function () {
        var dtToday = new Date();

        var month = dtToday.getMonth() + 1;
        var day = dtToday.getDate();
        var year = dtToday.getFullYear();

        if (month < 10)
            month = '0' + month.toString();
        if (day < 10)
            day = '0' + day.toString();

        var maxDate = year + '-' + month + '-' + day;
        $('#myMaxDate').attr('max', maxDate);
        $('#myMinDate').attr('max', maxDate);
    });




    $(document).ready(function () {
        LoadRejectedTable();
        LoadBanTable();
    });

      function LoadBanTable() {
        tableBan = $('#BanTable').DataTable({
            bLengthChange: false,
            destroy: true,
            responsive: true,
            ajax: {
                type: "GET",
                "url": "/DataGet/GetBanList",
                dataSrc: function (json) {
                    var a = new Array();
                    for (var b = 0; b <= json.length - 1; b++) {
                        var c = json[b];
                        a.push({
                            'UserInformationID': c.UserInformationID,
                            'FullName': c.FullName,
                            'Email': c.Email,
                            'Rejected': c.Rejected,
                        });
                    }
                    return a;
                },
            },
            columns: [
                {
                    title: "Manage",
                    "render": function () {
                        var edit = "<a class='btn btn-primary btn-xs btnBan' title='Edit' style='color: white'><i class = 'fa fa-1x fa-address-card'></i></a>";
                        return edit;
                    },
                    width: "80px"
                },
                {
                    title: "User ID",
                    data: "UserInformationID"
                },
                {
                    title: "Full Name",
                    data: "FullName"
                },
                {
                    title: "Email",
                    data: "Email"
                },
                {
                    title: "No. of Rejected",
                    data: "Rejected"
                },

            ],
            'columnDefs': [
                {
                    "className": "dt-center", "targets": "_all"
                }],
        });

          return tableBan;
    };

    $(document).on("click", ".btnBan",  function () {
        var data = tableBan.row($(this).parents('tr')).data(  );
        var PARAM_BanUser = data["UserInformationID"];

        Swal.fire({
            text: 'Insert No. of days to deactivate the user',
            input: 'number'
        }).then(function (result) {
            if (result.value) {
                const daysOfBan = result.value
                if (daysOfBan < 0) {
                    swal.fire('Insert valid numbers only');
                }
                else {
                    $.ajax({
                        type: "GET",
                        "url": "/DataUpdate/BanUser",
                        dataType: "json",
                        async: false,
                        data: {
                            UserInformationID: PARAM_BanUser,
                            NoOfDays: daysOfBan
                        }
                    });
                }
            }
        })

        LoadBanTable();

    });

    function LoadRejectedTable() {
        table = $('#RejectedTable').DataTable({
            bLengthChange: false,
            destroy: true,
            responsive: true,
            order: [[6, 'desc']],
            ajax: {
                type: "GET",
                "url": "/DataGet/GetCaseReportBetweenDates",
                data: {
                    UpdatedStatusID: 2,
                    StartDate: @Html.Raw(ViewBag.StartDate),
                    EndDate:  @Html.Raw(ViewBag.EndDate),
                },
                dataSrc: function (json) {
                    var a = new Array();
                    for (var b = 0; b <= json.length - 1; b++) {
                        var c = json[b];
                        a.push({
                            'CaseReportID': c.CaseReportID,
                            'UserInformationID': c.UserInformationID,
                            'FamilyName': c.FamilyName,
                            'GivenName': c.GivenName,
                            'MaidenName': c.MaidenName,
                            'FullName': c.GivenName + " " + c.MaidenName + " " + c.FamilyName,
                            'EnvironmentalConcernID': c.EnvironmentalConcernID,
                            'DateReported': new Date(parseInt(c.DateReported.substr(6))),
                            'Concern': c.Concern,
                            'UpdatedStatus': c.UpdatedStatus,
                            'UpdatedStatusDate': new Date(parseInt(c.UpdatedStatusDate.substr(6))),
                            'CaseLocation': c.CaseLocation,
                            'XCoordinates': c.XCoordinates,
                            'YCoordinates': c.YCoordinates,
                            'Coordinates': "(" + c.XCoordinates + "," + c.YCoordinates + ")",
                            'DateUpdated': c.DateUpdated,
                            'Notes': c.Notes,
                            'Hits': c.Hits,
                            'PhotoLink': c.PhotoLink,
                            'SubCategory': c.SubCategory

                        });
                    }
                    return a;
                },
            },
            columns: [
                {
                    title: "Manage",
                    "render": function () {
                        var edit = "<a class='btn btn-primary btn-xs btnUpdate' title='Edit' style='color: white'><i class = 'fa fa-1x fa-address-card'></i></a>";
                        return edit;
                    },
                    width: "80px"
                },
                {
                    title: "No.",
                    data: "CaseReportID"
                },
                {
                    title: "Date Reported",
                    data: "DateReported"
                },
                {
                    title: "Date Rejected",
                    data: "UpdatedStatusDate"
                },
                {
                    title: "Area",
                    data: "CaseLocation"
                },
                {
                    title: "Concern",
                    data: "Concern"
                },
                {
                    title: "Category",
                    data: "SubCategory"
                },

            ],
            'columnDefs': [
                {
                    "className": "dt-center", "targets": "_all"
                }],
        });

        return table;
    };

    //function ConvertToDate(value) {
    //    var pattern = /Date\(([^)]+)\)/;
    //    var results = pattern.exec(value);
    //    var dt = new Date(parseFloat(results[1]));

    //    return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
    //};

    $('.leaflet-control-attribution').hide();

    $('#myModalUpdate').on('shown.bs.modal', function () {
        $('#myModalUpdate').modal('show');

        setTimeout(function () {
            map.invalidateSize();
        }, 10);
    });

    $("#myModalUpdate").on("hidden.bs.modal", function () {
        map.removeLayer(marker);
    });

    var BAR = document.getElementById("myBarChart");
    var myBarChart = new Chart(BAR, {
        type: 'bar',
        data: {
            labels: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            datasets: [
                 @Html.Raw(@ViewBag.Coding)
            ],
        },
        options: {
            legend: {
                display: true
            },
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true,
                        min: 0
                    }
                }]
            }
        }
    });

    var PIE = document.getElementById("myPieChart");
    var myPieChart = new Chart(PIE, {
        type: 'pie',
        data: {
            labels: [@Html.Raw(ViewBag.SStatus)],
            datasets: [{
                data: [@ViewBag.SCount],
                backgroundColor: ["#B46E10", "#15a8f4"],
                //['#00FFFF', '#32CD32']
            }],
        },
    });

    $(document).on("click", ".btnUpdate", function () {
        $('#myModalUpdate').modal('show');
        var data = table.row($(this).parents('tr')).data();
        var PARAM_CaseReportID = data["CaseReportID"];
        var PARAM_Notes= data["Notes"];
        CaseReportID = PARAM_CaseReportID;


        var locations = [
            [
                "Case No: " + data["CaseReportID"] + "<br />" +
                "Date Reported: " + (data["DateReported"]) + "<br />" +
                "Date Updated: " + (data["UpdatedStatusDate"]) + "<br />" +
                "Type: " + data["Concern"] + "<br />" +
                "Location: " + data["CaseLocation"] + " [" + data["XCoordinates"] + "," + data["YCoordinates"] + "]"
                , data["XCoordinates"]
                , data["YCoordinates"]
            ]
        ];

        map.setView([data["XCoordinates"], data["YCoordinates"]], 20);
        marker = new L.marker([locations[0][1], locations[0][2]])
            .bindPopup(locations[0][0])
            .addTo(map);
        var imgsrc;



        //$.ajax({
        //    type: "GET",
        //    "url": "/DataGet/GetCaseReportPhoto",
        //    dataType: "json",
        //    async: false,
        //    data: {
        //        CaseReportID: PARAM_CaseReportID,
        //    },
        //    success: function (result) {

        //        var jsonStringify = JSON.stringify(result);
        //        var jsonObj = JSON.parse(jsonStringify);
        //        //alert(jsonStringify);
        //        //alert(jsonObj[0]['Base64Photo']);
        //        imgsrc = 'data:image/gif;base64,' + jsonObj[0]['Base64Photo'];
        //        }

        //}
        //);

        imgsrc = data["PhotoLink"];

        document.getElementById('imageID').src = imgsrc;
        document.getElementById("tbCaseReportNo").value = PARAM_CaseReportID;
        document.getElementById("tbCaseLocation").value = data["CaseLocation"] + " [" + (Math.round(data["XCoordinates"] * 100) / 100).toFixed(2) + "," + (Math.round(data["YCoordinates"] * 100) / 100).toFixed(2) + "]";
        document.getElementById("tbConcern").value = data["Concern"];
        document.getElementById("tbDateReported").value = (data["DateReported"]);
        document.getElementById("tbNotes").value = data["Notes"];
        document.getElementById("tbReporter").value = data["FamilyName"];
    });

    $(document).on("click", ".btnRestart", function () {
        Swal.fire({
            title: 'Are you sure?',
            text: "Do you really want to revert it to Submitted?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, revert it!'
        }).then((result) => {
            if (result.value) {

                $.ajax({
                    type: "GET",
                    "url": "/DataUpdate/UpdateCaseReportToSubmitted",
                    dataType: "json",
                    async: false,
                    data: {
                        CaseReportID: CaseReportID,
                    }
                });

                location.reload();

            }
        })
    });

    $(document).on("click", ".btnReject", function () {
        var Notes = $('.tbNotes').val();

        Swal.fire({
            title: 'Send a Reason?',
            text: "Do you really want to send a reason for rejection?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, send it!'
        }).then((result) => {
            if (result.value) {

                $.ajax({
                    type: "GET",
                    "url": "/DataUpdate/UpdateCaseReportToFinalizeRejected",
                    dataType: "json",
                    async: false,
                    data: {
                        CaseReportID: CaseReportID,
                        Notes: Notes
                    }
                });

                location.reload();

            }
        })
    });

    $(document).on("click", "#imageID", function () {
        var srcImage = document.getElementById("imageID").src;

        let w = window.open('a', 'TerraTech: Image', 'width=' + screen.width + ',height=' + screen.height + ',scrollbars=yes');
        let image = new Image();
        image.src = srcImage;
        setTimeout(function () {
            w.document.write(image.outerHTML);
        }, 0);

    });

    $(document).on("click", ".btnGenerate", function () {

        var PARAM_MinDate = $('#myMinDate').val();
        var PARAM_MaxDate = $('#myMaxDate').val();

        var mindt = new Date(PARAM_MinDate);
        var maxdt = new Date(PARAM_MaxDate);

        //alert(mindt.getDate());

        //Minimum Date
        var min_day = mindt.getDate();
        var min_month = mindt.getMonth() + 1;
        var min_year = mindt.getFullYear();


        //Maximum Date
        var max_day = maxdt.getDate();
        var max_month = maxdt.getMonth() + 1;
        var max_year = maxdt.getFullYear();



        //  alert(PARAM_MaxDate.year);

        // alert(PARAM_MaxDate + ' ' + PARAM_MinDate)
        if (PARAM_MinDate > PARAM_MaxDate) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Minimum Date cannot be greater than Maximum Date!',
                footer: 'Powered by TerraTechPH'
            })
        }
        else if (PARAM_MinDate == "" || PARAM_MaxDate == "") {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Please select a Minimum and Maximum Date!',
                footer: 'Powered by TerraTechPH'
            })
        }
        else {

            //public ActionResult Test_Submitted(int StartDateMonth=1, int StartDateDay=1, int StartDateYear=1990, int EndDateMonth = 1, int EndDateDay = 1, int EndDateYear = 1990)
            //https://localhost:44314/Entities/TestSubmitted?StartDateMonth=1&StartDateDay=4&StartDateYear=2021&EndDateMonth=1&EndDateDay=5&EndDateYear=2021
            //https://localhost:44314/Entities/Test_Submitted?StartDateMonth=1&StartDateDay=1&StartDateYear=2019&EndDateMonth=1&EndDateDay=1&EndDateYear=2020
            //LoadSubmittedTable();
            window.location.href = "/Entities/Test_Rejected?StartDateMonth=" + min_month + '&StartDateDay=' + min_day + '&StartDateYear=' + min_year + '&EndDateMonth=' + max_month + '&EndDateDay=' + max_day + '&EndDateYear=' + max_year;



        }

    });
</script>
